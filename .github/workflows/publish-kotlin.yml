name: Publish Kotlin Bindings

on:
  repository_dispatch:
    types: [kotlin-publish]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true
        type: string
      cdk_repo:
        description: "CDK repository (owner/name)"
        required: false
        default: "cashubtc/cdk"
        type: string
      cdk_ref:
        description: "CDK repository ref/tag"
        required: false
        default: "main"
        type: string

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  publish:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up variables
      id: vars
      run: |
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "version=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
          echo "cdk_repo=${{ github.event.client_payload.cdk_repo || 'cashubtc/cdk' }}" >> $GITHUB_OUTPUT
          echo "cdk_ref=${{ github.event.client_payload.cdk_ref || 'main' }}" >> $GITHUB_OUTPUT
        else
          echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          echo "cdk_repo=${{ inputs.cdk_repo }}" >> $GITHUB_OUTPUT
          echo "cdk_ref=${{ inputs.cdk_ref }}" >> $GITHUB_OUTPUT
        fi

    - name: Checkout CDK repository
      uses: actions/checkout@v4
      with:
        repository: ${{ steps.vars.outputs.cdk_repo }}
        ref: ${{ steps.vars.outputs.cdk_ref }}
        path: cdk
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: |
          aarch64-linux-android
          armv7-linux-androideabi
          i686-linux-android
          x86_64-linux-android

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android NDK
      run: |
        sdkmanager "ndk;25.2.9519653"
        echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

    - name: Install cargo-ndk
      run: cargo install cargo-ndk

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          cdk/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('cdk/**/Cargo.lock') }}

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    - name: Generate Kotlin bindings
      run: |
        cd cdk/crates/cdk-ffi
        cargo build --release
        cargo run --bin uniffi-bindgen generate \
          --library ../../target/release/libcdk_ffi.so \
          --language kotlin \
          --no-format \
          --out-dir ../../../lib/src/main/kotlin

    - name: Build Android libraries
      run: |
        export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
        export ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT
        bash ./scripts/build-android.sh

    - name: Update version in build.gradle.kts
      run: |
        sed -i 's/version = "[^"]*"/version = "${{ steps.vars.outputs.version }}"/' lib/build.gradle.kts

    - name: Update version in README.md
      run: |
        sed -i 's/implementation("[^"]*:cdk-kotlin:[^"]*")/implementation("io.github.thesimplekid:cdk-kotlin:${{ steps.vars.outputs.version }}")/' README.md

    - name: Build library
      run: ./gradlew :lib:assembleRelease

    - name: Run tests
      run: ./gradlew :lib:testReleaseUnitTest

    - name: Build AAR
      run: ./gradlew :lib:bundleReleaseAar

    - name: Publish to Maven Central
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
      run: |
        ./gradlew :lib:publishToSonatype closeAndReleaseRepository

    - name: Create and push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add lib/build.gradle.kts README.md
        git commit -m "Release version ${{ steps.vars.outputs.version }}"
        git tag -a "v${{ steps.vars.outputs.version }}" -m "Release version ${{ steps.vars.outputs.version }}"
        git push origin HEAD:main
        git push origin "v${{ steps.vars.outputs.version }}"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.vars.outputs.version }}
        release_name: Release ${{ steps.vars.outputs.version }}
        body: |
          ## CDK Kotlin ${{ steps.vars.outputs.version }}

          Kotlin/Android bindings for the Cashu Development Kit.

          ### Installation

          Add to your `build.gradle.kts`:

          ```kotlin
          dependencies {
              implementation("io.github.thesimplekid:cdk-kotlin:${{ steps.vars.outputs.version }}")
          }
          ```

          ### Changes

          Built from CDK repository: ${{ steps.vars.outputs.cdk_repo }}@${{ steps.vars.outputs.cdk_ref }}
        draft: false
        prerelease: false

    - name: Upload AAR to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./lib/build/outputs/aar/lib-release.aar
        asset_name: cdk-kotlin-${{ steps.vars.outputs.version }}.aar
        asset_content_type: application/octet-stream